/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthLayoutImport } from './routes/auth/layout'
import { Route as AppLayoutImport } from './routes/app/layout'
import { Route as IndexImport } from './routes/index'
import { Route as AppIndexImport } from './routes/app/index'
import { Route as AppUserLayoutImport } from './routes/app/user/layout'
import { Route as AuthSignUpIndexImport } from './routes/auth/sign-up/index'
import { Route as AuthSignInIndexImport } from './routes/auth/sign-in/index'
import { Route as AppUserProductsIndexImport } from './routes/app/user/products/index'
import { Route as AppProductsSearchIndexImport } from './routes/app/products/$search/index'

// Create/Update Routes

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppLayoutRoute = AppLayoutImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppUserLayoutRoute = AppUserLayoutImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AuthSignUpIndexRoute = AuthSignUpIndexImport.update({
  id: '/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthSignInIndexRoute = AuthSignInIndexImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AppUserProductsIndexRoute = AppUserProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => AppUserLayoutRoute,
} as any)

const AppProductsSearchIndexRoute = AppProductsSearchIndexImport.update({
  id: '/products/$search/',
  path: '/products/$search/',
  getParentRoute: () => AppLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppLayoutImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof rootRoute
    }
    '/app/user': {
      id: '/app/user'
      path: '/user'
      fullPath: '/app/user'
      preLoaderRoute: typeof AppUserLayoutImport
      parentRoute: typeof AppLayoutImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppLayoutImport
    }
    '/auth/sign-in/': {
      id: '/auth/sign-in/'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInIndexImport
      parentRoute: typeof AuthLayoutImport
    }
    '/auth/sign-up/': {
      id: '/auth/sign-up/'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpIndexImport
      parentRoute: typeof AuthLayoutImport
    }
    '/app/products/$search/': {
      id: '/app/products/$search/'
      path: '/products/$search'
      fullPath: '/app/products/$search'
      preLoaderRoute: typeof AppProductsSearchIndexImport
      parentRoute: typeof AppLayoutImport
    }
    '/app/user/products/': {
      id: '/app/user/products/'
      path: '/products'
      fullPath: '/app/user/products'
      preLoaderRoute: typeof AppUserProductsIndexImport
      parentRoute: typeof AppUserLayoutImport
    }
  }
}

// Create and export the route tree

interface AppUserLayoutRouteChildren {
  AppUserProductsIndexRoute: typeof AppUserProductsIndexRoute
}

const AppUserLayoutRouteChildren: AppUserLayoutRouteChildren = {
  AppUserProductsIndexRoute: AppUserProductsIndexRoute,
}

const AppUserLayoutRouteWithChildren = AppUserLayoutRoute._addFileChildren(
  AppUserLayoutRouteChildren,
)

interface AppLayoutRouteChildren {
  AppUserLayoutRoute: typeof AppUserLayoutRouteWithChildren
  AppIndexRoute: typeof AppIndexRoute
  AppProductsSearchIndexRoute: typeof AppProductsSearchIndexRoute
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppUserLayoutRoute: AppUserLayoutRouteWithChildren,
  AppIndexRoute: AppIndexRoute,
  AppProductsSearchIndexRoute: AppProductsSearchIndexRoute,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

interface AuthLayoutRouteChildren {
  AuthSignInIndexRoute: typeof AuthSignInIndexRoute
  AuthSignUpIndexRoute: typeof AuthSignUpIndexRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthSignInIndexRoute: AuthSignInIndexRoute,
  AuthSignUpIndexRoute: AuthSignUpIndexRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppLayoutRouteWithChildren
  '/auth': typeof AuthLayoutRouteWithChildren
  '/app/user': typeof AppUserLayoutRouteWithChildren
  '/app/': typeof AppIndexRoute
  '/auth/sign-in': typeof AuthSignInIndexRoute
  '/auth/sign-up': typeof AuthSignUpIndexRoute
  '/app/products/$search': typeof AppProductsSearchIndexRoute
  '/app/user/products': typeof AppUserProductsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthLayoutRouteWithChildren
  '/app/user': typeof AppUserLayoutRouteWithChildren
  '/app': typeof AppIndexRoute
  '/auth/sign-in': typeof AuthSignInIndexRoute
  '/auth/sign-up': typeof AuthSignUpIndexRoute
  '/app/products/$search': typeof AppProductsSearchIndexRoute
  '/app/user/products': typeof AppUserProductsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/app': typeof AppLayoutRouteWithChildren
  '/auth': typeof AuthLayoutRouteWithChildren
  '/app/user': typeof AppUserLayoutRouteWithChildren
  '/app/': typeof AppIndexRoute
  '/auth/sign-in/': typeof AuthSignInIndexRoute
  '/auth/sign-up/': typeof AuthSignUpIndexRoute
  '/app/products/$search/': typeof AppProductsSearchIndexRoute
  '/app/user/products/': typeof AppUserProductsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/auth'
    | '/app/user'
    | '/app/'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/app/products/$search'
    | '/app/user/products'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/app/user'
    | '/app'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/app/products/$search'
    | '/app/user/products'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/auth'
    | '/app/user'
    | '/app/'
    | '/auth/sign-in/'
    | '/auth/sign-up/'
    | '/app/products/$search/'
    | '/app/user/products/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppLayoutRoute: AppLayoutRouteWithChildren,
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app/layout.tsx",
      "children": [
        "/app/user",
        "/app/",
        "/app/products/$search/"
      ]
    },
    "/auth": {
      "filePath": "auth/layout.tsx",
      "children": [
        "/auth/sign-in/",
        "/auth/sign-up/"
      ]
    },
    "/app/user": {
      "filePath": "app/user/layout.tsx",
      "parent": "/app",
      "children": [
        "/app/user/products/"
      ]
    },
    "/app/": {
      "filePath": "app/index.tsx",
      "parent": "/app"
    },
    "/auth/sign-in/": {
      "filePath": "auth/sign-in/index.tsx",
      "parent": "/auth"
    },
    "/auth/sign-up/": {
      "filePath": "auth/sign-up/index.tsx",
      "parent": "/auth"
    },
    "/app/products/$search/": {
      "filePath": "app/products/$search/index.tsx",
      "parent": "/app"
    },
    "/app/user/products/": {
      "filePath": "app/user/products/index.tsx",
      "parent": "/app/user"
    }
  }
}
ROUTE_MANIFEST_END */
